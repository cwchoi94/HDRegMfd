% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LR.R
\name{LR}
\alias{LR}
\title{High-dimensional linear regression for manifold-valued responses and covariates.}
\usage{
LR(
  Xorg,
  Yorg,
  Yspace,
  lambda = 0.1,
  Xdim.max = 100,
  R = 100,
  phi = 1,
  penalty = "LASSO",
  gamma = 0,
  eta = 0.001,
  max.iter = 500,
  threshold = 1e-10
)
}
\arguments{
\item{Xorg}{a \eqn{p} list of manifold-valued covariates. Each \eqn{X_j} is an \eqn{n}-by-\eqn{d_j} matrix, see \code{\link{PCA.manifold.list}}.}

\item{Yorg}{an \eqn{n}-by-\eqn{m} response matrix.}

\item{Yspace}{an underlying space of \eqn{Y}.}

\item{lambda}{a penalty constant, real>0.}

\item{Xdim.max}{a max dimension of \eqn{X_j}, real>0.}

\item{R}{a constrained bound, real>0.}

\item{phi}{a parameter in computing ADMM-MM algorithm for the majorized objective function, default 1.}

\item{penalty}{a method of penalty. It should be one of 'LASSO', 'SCAD', or 'MCP'.}

\item{gamma}{a parameter for SCAD (3.7) or MCP (3), parentheses: default value.}

\item{eta}{a parameter in computing ADMM-MM algorithm for the proximal norm square, default 1e-3.}

\item{max.iter}{a maximum iteration, default 500.}

\item{threshold}{an algorihtm convergence threshold, default 1e-10.}
}
\value{
a 'LR' object.
   \describe{
      \item{pca}{a 'PCA.manifold.list' object, see \code{\link{PCA.manifold.list}}.}
      \item{Ymu}{an \eqn{m} vector of the Frechet mean of \eqn{Y}.}
      \item{beta}{a \eqn{P}-by-\eqn{m} matrix of estimated beta, where \eqn{P=\sum_{j=1}^p K_j}.}
      \item{beta.each}{a \eqn{p} list of each \eqn{beta_j}.}
      \item{beta.norm}{a \eqn{p} vector of norm of each \eqn{beta_j}.}
      \item{beta.vectors}{a \eqn{p} list of corresponding bases of \eqn{X_j}. Each basis is a \eqn{K_j}-by-\eqn{T_j} matrix.}
      \item{beta.tensor}{a \eqn{p} list of tensor operators, see \code{\link{make.tensor}}.}
      \item{proper.indices}{a indices of nonzero \code{beta_j}.}
      \item{runtime}{a running time.}
      \item{...}{other parameters.}
}
}
\description{
Compute tensor product operators by ADMM-MM algorithm.
}
