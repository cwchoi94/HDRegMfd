% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/QM_CV.R
\name{QM.CV}
\alias{QM.CV}
\title{Cross-Validation for High-Dimensional Quantile Linear Models}
\usage{
QM.CV(
  Xorg,
  Yorg,
  tau = 0.5,
  h = NULL,
  kernel = "Gaussian",
  cv.type = "AIC",
  penalty = "LASSO",
  gamma = 0,
  lambda.list = NULL,
  Xdim.max.list = NULL,
  max.cv.iter = 20,
  cv.threshold = 1e-10,
  cv.const = 2,
  phi0 = 1e-04,
  c.phi = 1.1,
  max.iter = 500,
  threshold = 1e-10
)
}
\arguments{
\item{Xorg}{a list of covariates with the following components (see also \code{\link{covariates.generate}}):
\describe{
      \item{j}{a \eqn{p} list of manifold-valued covariates, where each \eqn{j}th element is an \eqn{n\times T_j} matrix.}
      \item{spaces}{a \eqn{p} vector of the underlying spaces \eqn{\mathcal{M}_j} of \eqn{X_j}, see \code{\link{Check.manifold}}.}
      \item{p}{the number of \eqn{X_j}.}
}}

\item{Yorg}{an \eqn{n\times m} matrix of manifold-valued responses.}

\item{tau}{the quantile of Y given X (default: 0.5).}

\item{h}{the bandwidth for smoothing a check function.}

\item{kernel}{the kernel function for smoothing a check function.}

\item{cv.type}{a CV method, which must be one of 'AIC', 'BIC', and 'ABIC' (default: 'AIC').}

\item{penalty}{the name of a penalty function. This must be one of 'LASSO', 'SCAD', or 'MCP' (default: 'LASSO').}

\item{gamma}{a parameter for SCAD (default: 3.7) or MCP (default: 3).}

\item{lambda.list}{a vector of non-negative penalty constants.}

\item{Xdim.max.list}{a vector of the maximum dimension to which \eqn{X_j} will be reduced.}

\item{max.cv.iter}{a maximum number of CV iterations (default 20).}

\item{cv.threshold}{a convergence threshold for the CV (default 1e-10).}

\item{cv.const}{a constant for AIC or BIC penalty term (default: 2).}

\item{phi0}{the initial \eqn{phi} for updating \eqn{\hat{\beta}}.}

\item{c.phi}{the multiplying constant for \eqn{\phi}.}

\item{max.iter}{a maximum number of iterations (default: 500).}

\item{threshold}{a convergence threshold for the algorithm (default: 1e-10).}
}
\value{
an \code{\link{QM}} object with the following components:
   \describe{
      \item{pca}{a 'PCA.manifold.list' object, see \code{\link{PCA.manifold.list}}.}
      \item{tau}{the quantile.}
      \item{kernel}{the kernel function for smoothing a check function.}
      \item{h}{the bandwidth for smoothing a check function.}
      \item{beta}{a \eqn{L_+^{*} \times m} matrix of estimated \eqn{\bm{\beta}}, where \eqn{L_+^{*}=\sum_{j=1}^p L_j^*} and \eqn{m} is the intrinsic dimension of \eqn{T_{\mu_Y}\mathcal{M}_Y}.}
      \item{beta0}{an \eqn{m} vector of the intercept constant.}
      \item{beta.each}{a \eqn{p} list of \eqn{L_j^*\times m} matrices of \eqn{\bm{\beta}_j}.}
      \item{beta.norm}{a \eqn{p} vector of norms of \eqn{\bm{\beta}_j}.}
      \item{beta.norm0}{the norm of \eqn{{\beta}_0^*}.}
      \item{beta.vectors}{a \eqn{p} list of orthonormal bases of \eqn{X_j} obtained by \code{\link{PCA.manifold.list}}. Each basis is an \eqn{L_j^*\times T_j} matrix.}
      \item{beta.tensor}{a \eqn{p} list of estimated Hilbert-Schmidt operators, see \code{\link{make.tensor}}.}
      \item{proper.indices}{an estimated index set an index set \eqn{\mathcal{S}=\{1\le j\le p : \hat{\mathfrak{B}}_j\neq0\}}.}
      \item{iter.inner}{a vector of iteration numbers for each sub-iteration.}
      \item{runtime}{the running time (HH:MM:SS).}
      \item{runtime.second}{the running time (second).}
      \item{runtime.opt.second}{the running time with the optimal parmaters (second).}
      \item{...}{other parameters.}
}
}
\description{
Implements cross-validation (CV) for high-dimensional quantile linear models based on 'AIC' or 'BIC'.
The CV process is based on the coordinate-wise variable selection and is implemented using a function 'QM_CV' in 'QM_CV.cpp'.
For a more detailed description of parameters, see \code{\link{QM}}.
}
