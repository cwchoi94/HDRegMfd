% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AM_oracle_CBS_kfold.R
\name{AM.CBS.kfold}
\alias{AM.CBS.kfold}
\title{Kfold Cross-Validation for High-Dimensional Additive Models}
\usage{
AM.CBS.kfold(
  Xorg,
  Yorg,
  Yspace,
  proper.ind.mat = NULL,
  degree = 0,
  h.grid = 0.01,
  h.count = 10,
  kfold = 5,
  seed = NULL,
  penalty = "LASSO",
  gamma = 0,
  lambda.list = NULL,
  Xdim.max.list = NULL,
  R.list = NULL,
  max.cv.iter = 20,
  cv.threshold = 1e-06,
  transform = "Gaussian",
  normalize = FALSE,
  ngrid = 51,
  Kdenom_method = "numeric",
  phi = 1,
  eta = 0.001,
  max.iter = 200,
  threshold = 1e-06
)
}
\arguments{
\item{Xorg}{a list of covariates with the following components (see also \code{\link{covariates.generate}}):
\describe{
      \item{j}{a \eqn{p} list of manifold-valued covariates, where each \eqn{j}th element is an \eqn{n\times T_j} matrix.}
      \item{spaces}{a \eqn{p} vector of the underlying spaces \eqn{\mathcal{M}_j} of \eqn{X_j}, see \code{\link{Check.manifold}}.}
      \item{p}{the number of \eqn{X_j}.}
}}

\item{Yorg}{an \eqn{n\times m} matrix of manifold-valued responses.}

\item{Yspace}{the name of the underlying space \eqn{\mathcal{M}_Y} of \eqn{Y}.}

\item{degree}{the degree of the local polynomial fitting. Options are: 0 for Nadaraya-Watson (default), 1 for local-linear, etc.}

\item{h.grid}{grid length of h_list for each \eqn{h}th bandwidth.}

\item{h.count}{a number of h_list for each \eqn{h}th bandwidth.}

\item{kfold}{the number of kfolds (default: 5).}

\item{seed}{a random seed for kfolds. When it is not provided, the data will be partitioned in index order.}

\item{penalty}{the name of a penalty function. This must be one of 'LASSO', 'SCAD', or 'MCP' (default: 'LASSO').}

\item{gamma}{a parameter for SCAD (default: 3.7) or MCP (default: 3).}

\item{lambda.list}{a vector of non-negative penalty constants.}

\item{Xdim.max.list}{a vector of the maximum dimension to which \eqn{X_j} will be reduced.}

\item{R.list}{a vector of \eqn{\ell^1}-type constrained bounds, multiplied by \eqn{\hat\sigma_Y} (default: c(1e10)).}

\item{max.cv.iter}{a maximum number of CV iterations (default: 20).}

\item{cv.threshold}{a convergence threshold for the CV (default: 1e-6).}

\item{transform}{a method of transformation. Must be one of 'linear', 'Gaussian' or 'trigonometric' (default: 'linear').}

\item{normalize}{a parameter indicating whether to standardize each column of score matrices (default: \code{TRUE}).}

\item{ngrid}{the number of grid points for evaluating the KDE (default: 51).}

\item{Kdenom_method}{a method used for the denominator in the normalized kernel calculation.}

\item{phi}{a parameter for computing the ADMM-based algorithm for the majorized objective function (default: 1).}

\item{eta}{a parameter for computing the ADMM-based algorithm for the proximal norm square (default: 1e-3).}

\item{max.iter}{a maximum number of iterations (default: 200).}

\item{threshold}{a convergence threshold for the algorithm (default: 1e-6).}
}
\value{
a \code{AM} object with the following compnents:
   \describe{
      \item{pca}{a \code{\link{PCA.manifold.list}} object.}
      \item{Ymu}{the Frechet mean \eqn{\mu_Y} of \eqn{Y}.}
      \item{kde.1d}{a \eqn{p} list of one-dimensional KDE where each element is (ngrid,degree+1,degree+1) array.}
      \item{transform}{a \code{\link{Transform.Score}} object.}
      \item{mhat}{a \eqn{p} list of estimated \eqn{\hat m_{jk}}, where each element is an \eqn{ngrid \times (degree+1) \times m} cube.}
      \item{mhat.norm}{a \eqn{p} vector of norms of \eqn{\hat m_{jk}}.}
      \item{col.indices}{an index set used in the estimation.}
      \item{proper.indices}{an estimated index set \eqn{\mathcal{S}=\{(j,k): \hat{m_{jk}}\neq0\}}.}
      \item{proper.indices.1d}{an estimated index set with a version of sub-vector of \code{col.indices}.}
      \item{parameter.list}{a list of optimal parameters for each CV update.}
      \item{loss.list}{a list of loss for each CV update.}
      \item{runtime}{the running time (HH:MM:SS).}
      \item{runtime.second}{the running time (second).}
      \item{...}{other parameters.}
}
}
\description{
Implements Kfold cross-validation (Kfold-CV) for high-dimensional additive models.
The CV process is based on the coordinate-wise variable selection and is implemented using a function \code{AM_CV} in 'AM_CV.cpp'.
For a more detailed description of parameters, see \code{\link{AM}}.
}
